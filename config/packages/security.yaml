security:
    enable_authenticator_manager: true # Activation du gestionnaire d'authentification Symfony

    providers:
        users_in_database:
            entity:
                class: App\Entity\Utilisateur
                property: mail # Spécifie la classe d'entité utilisée pour l'authentification, ainsi que le champ de propriété utilisé comme identifiant (ici, "mail")

    password_hashers:
        App\Entity\Utilisateur:
            algorithm: "auto" # Sélection automatique de l'algorithme de hachage de mot de passe pour les utilisateurs

    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false # Désactive la sécurité pour les routes de développement (profilage, débogage, ressources statiques)

        main:
            lazy: true # Activation du chargement différé pour le pare-feu principal
            provider: users_in_database # Utilise le fournisseur 'users_in_database' défini précédemment

            form_login:
                login_path: app_login # Définit le chemin de la page de connexion
                check_path: app_login # Définit le chemin de vérification de la connexion
                default_target_path: app_accueil # Redirige vers cette route après une connexion réussie

            logout:
                path: app_logout # Définit le chemin de déconnexion
                target: app_login # Redirige vers la page de connexion après la déconnexion

    access_control:
        - { path: ^/$, roles: PUBLIC_ACCESS } # Autorise l'accès à la page d'accueil pour les utilisateurs non authentifiés
        - { path: ^/inscription$, roles: PUBLIC_ACCESS } # Autorise l'accès à la page d'inscription pour les utilisateurs non authentifiés
        - { path: ^/, roles: ROLE_USER } # Exige l'authentification pour toutes les autres routes

when@test:
    security:
        password_hashers:
            # Configuration spécifique pour les tests
            Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface:
                algorithm: auto
                cost: 4 # Coût minimal pour le hachage de mot de passe avec bcrypt
                time_cost: 3 # Coût minimal pour le hachage de mot de passe avec Argon2
                memory_cost: 10 # Coût minimal pour le hachage de mot de passe avec Argon2
